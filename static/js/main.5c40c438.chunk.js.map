{"version":3,"sources":["components/phonebook/phonebook.module.css","redux/phonebook/phbActions.js","components/phonebook/ContactsList.js","components/phonebook/AddContactForm.js","components/phonebook/Filter.js","components/App.js","redux/phonebook/phbReducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","name","tel","payload","contact","id","uuidv4","deleteContact","changeFilter","mDTP","onDeleteItem","phbActions","connect","state","contacts","items","filter","item","toLowerCase","includes","map","key","className","styles","listItem_container","deleteButton","type","onClick","AddContactForm","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","find","alert","onAddContact","onSubmit","this","input_field","onChange","addButton","Component","handleInput","App","container","createReducer","actionsTypes","action","combineReducers","rootReducer","phbReducer","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c40c438.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"phonebook_container__bHFyl\",\"input_field\":\"phonebook_input_field__3rH6g\",\"addButton\":\"phonebook_addButton__3vOrg\",\"listItem_container\":\"phonebook_listItem_container__1QXLR\",\"deleteButton\":\"phonebook_deleteButton__Tf9az\"};","import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contact/adding\", ({ name, tel }) => ({\r\n  payload: { contact: { id: uuidv4(), name, tel } },\r\n}));\r\nconst deleteContact = createAction(\"contact/delete\");\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import React from \"react\";\r\nimport styles from \"./phonebook.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport phbActions from \"../../redux/phonebook/phbActions\";\r\n\r\nfunction ContactsList({ contacts, onDeleteItem }) {\r\n  // в мене весь список рендериться тут. якщо ж елементи списку зробити окремим компонентом,\r\n  // то йому треба прокидати лише ID, і кожний елемент колекції підписувати на редакс стейт окремо.\r\n  // це така оптимізація. приклад у Репети лекція 12 в кінці\r\n  return (\r\n    <>\r\n      <ul>\r\n        {contacts.map((contact) => (\r\n          <li key={contact.id}>\r\n            <div className={styles.listItem_container}>\r\n              {contact.name + \" \" + contact.tel}\r\n              <button\r\n                id={contact.id}\r\n                className={styles.deleteButton}\r\n                type=\"button\"\r\n                onClick={() => onDeleteItem(contact.id)}\r\n              >\r\n                Видалити\r\n              </button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  const filteredContacts = state.contacts.items.filter((item) =>\r\n    item.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\r\n  );\r\n  return { contacts: filteredContacts };\r\n};\r\n\r\n// const mapStateToProps = (state) => ({ contacts: state.contacts.items });\r\n\r\nconst mDTP = {\r\n  onDeleteItem: phbActions.deleteContact,\r\n};\r\nexport default connect(mapStateToProps, mDTP)(ContactsList);\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./phonebook.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport phbActions from \"../../redux/phonebook/phbActions\";\r\n\r\nclass AddContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    tel: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.name) {\r\n      if (this.props.contacts.find((item) => item.name === this.state.name)) {\r\n        alert(\"Такий контакт уже існує\");\r\n        this.setState({ name: \"\", tel: \"\" });\r\n        return;\r\n      }\r\n      this.props.onAddContact(this.state);\r\n      this.setState({ name: \"\", tel: \"\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {\" \"}\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Ім'я{\" \"}\r\n            <input\r\n              className={styles.input_field}\r\n              type=\"text\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              name=\"name\"\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Номер телефону{\" \"}\r\n            <input\r\n              className={styles.input_field}\r\n              type=\"tel\"\r\n              value={this.state.tel}\r\n              onChange={this.handleChange}\r\n              name=\"tel\"\r\n              // pattern=\"[0-9]{5}\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <button className={styles.addButton} type=\"submit\">\r\n            Додати в контакти\r\n          </button>\r\n\r\n          <br />\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// після цієї операції на пропсах компонента будуть потрібні нам куски стейта\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n});\r\n// а ця операція прокидує методи у пропси компонента\r\nconst mDTP = { onAddContact: phbActions.addContact };\r\n\r\nexport default connect(mapStateToProps, mDTP)(AddContactForm);\r\n","import React from \"react\";\r\nimport styles from \"./phonebook.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport phbActions from \"../../redux/phonebook/phbActions\";\r\n\r\nconst Filter = ({ handleInput, value }) => (\r\n  <label>\r\n    Фільтрувати по імені{\" \"}\r\n    <input\r\n      className={styles.input_field}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={(e) => handleInput(e.target.value)}\r\n    />\r\n  </label>\r\n);\r\n\r\n// ось тут забираються значення із глобального стейта\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    value: state.contacts.filter,\r\n  };\r\n};\r\nconst mDTP = { handleInput: phbActions.changeFilter };\r\n\r\nexport default connect(mapStateToProps, mDTP)(Filter);\r\n","import React from \"react\";\r\nimport ContactsList from \"./phonebook/ContactsList\";\r\nimport AddContactForm from \"./phonebook/AddContactForm\";\r\nimport Filter from \"./phonebook/Filter\";\r\nimport styles from \"./phonebook/phonebook.module.css\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <h1>Телефонна книга</h1>\r\n        <AddContactForm />\r\n        <Filter />\r\n        <ContactsList />\r\n      </div>\r\n\r\n      {/* <div className={styles.container}>\r\n          <h1>Телефонна книга</h1>\r\n          <AddContactForm onAddContact={this.addContact} />\r\n          {this.state.contacts.length > 1 && (\r\n            <Filter\r\n              handleInput={this.handleFilter}\r\n              value={this.state.filterW}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        <div className={styles.container}>\r\n          <h2>Список контактів</h2>\r\n          {filteredContacts.length > 0 && (\r\n            <>\r\n              <ContactsList\r\n                contacts={filteredContacts}\r\n                onDeleteItem={this.deleteItem}\r\n              />\r\n            </>\r\n          )}\r\n        </div> */}\r\n    </>\r\n  );\r\n}\r\n// state = {\r\n//   contacts: [\r\n//     { id: \"id-1\", name: \"Rosie Simpson\", tel: \"459-12-56\" },\r\n//     { id: \"id-2\", name: \"Hermione Kline\", tel: \"443-89-12\" },\r\n//     { id: \"id-3\", name: \"Eden Clements\", tel: \"645-17-79\" },\r\n//     { id: \"id-4\", name: \"Annie Copeland\", tel: \"227-91-26\" },\r\n//   ],\r\n//   filterW: \"\",\r\n// };\r\n\r\n// addContact = ({ name, tel }) => {\r\n//   if (this.state.contacts.find((contact) => contact.name === name)) {\r\n//     alert(\"Такий контакт уже існує\");\r\n//     return;\r\n//   }\r\n//   this.setState({\r\n//     contacts: [...this.state.contacts, { id: uuidv4(), name, tel }],\r\n//   });\r\n// };\r\n\r\n// handleFilter = (e) => {\r\n//   this.setState({ filterW: e.target.value });\r\n// };\r\n\r\n// getFilteredContacts = () => {\r\n//   const { contacts, filterW } = this.state;\r\n//   return contacts.filter((contact) =>\r\n//     contact.name.toLowerCase().includes(filterW.toLowerCase())\r\n//   );\r\n// };\r\n\r\n// deleteItem = (e) => {\r\n//   const idDelete = e.target.id;\r\n//   const updatedContacts = this.state.contacts.filter(\r\n//     (contact) => contact.id !== idDelete\r\n//   );\r\n//   this.setState({ contacts: updatedContacts });\r\n// };\r\n\r\n// const filteredContacts = this.getFilteredContacts();\r\n","import { combineReducers } from \"redux\";\r\nimport actionsTypes from \"./phbActions\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst items = createReducer([], {\r\n  [actionsTypes.addContact]: (state, action) => [\r\n    ...state,\r\n    action.payload.contact,\r\n  ],\r\n  [actionsTypes.deleteContact]: (state, action) =>\r\n    state.filter((contact) => contact.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actionsTypes.changeFilter]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n\r\n// {\r\n//   contacts:\r\n// {item:[],\r\n// filterW: \"\",}\r\n// };\r\n","import { combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport phbReducer from \"./phonebook/phbReducer\";\r\n\r\nconst rootReducer = combineReducers({ contacts: phbReducer });\r\nconst store = configureStore({ reducer: rootReducer });\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App.js\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}